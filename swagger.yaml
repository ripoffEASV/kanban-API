openapi: 3.0.0
info:
  title: MEN REST API
  description: MongoDB ExpressJS NodeJS REST API
  version: 1.0.0
servers:
  - url: http://localhost:4000/api/
    description: Localhost development server
components:
  securitySchemes:
    securitySchemes:
      bearerAuth: # arbitrary name for the security scheme
    type: http
    scheme: bearer
    bearerFormat: JWT

  schemas:
    OrganizationModel:
      type: object
      properties:
        orgName:
          type: string
          example: "Acme Corp"
        createdByID:
          type: string
          example: "MongoDBObjectID"
        ownerID:
          type: string
          example: "MongoDBObjectID"
        orgMembers:
          type: array
          example: '["MongoDBObjectID", "MongoDBObjectID"]'
        projectIDs:
          type: array
          example: '["MongoDBObjectID", "MongoDBObjectID"]'
        inviteArray:
          type: array
          example: '["MongoDBObjectID", "MongoDBObjectID"]'

    ProjectModel:
      type: object
      properties:
        projectName:
          type: string
          example: "Acme Corp Project"
        projectStateIDs:
          type: array
          example: '["MongoDBObjectID", "MongoDBObjectID"]'
        members:
          type: array
          example: '["MongoDBObjectID", "MongoDBObjectID"]'
        orgID:
          type: string
          example: "MongoDBObjectID"

    StateModel:
      type: object
      properties:
        stateName:
          type: string
          exmaple: "Todo"
        position:
          type: number
          example: "0 - where lower position equals what is shown first"

    TaskModel:
      type: object
      properties:
        stateID:
          type: string
          example: "MongoDBObjectID"
        taskTitle:
          type: string
          example: "Create login button design"
        taskDescription:
          type: string
          example: "Create login button design, which fulfills the following criteria: - Responsive, - clear contrast and readable, - follow company design methods"
        hoursExpected:
          type: string
          example: "12h"
        hoursSpent:
          type: string
          example: "10h"
        labelColor:
          type: string
          example: "color should be a hex value ie: #CACACA"
        labelText:
          type: string
          example: "to describe the label, ie color red is urgent"
        parentTaskID:
          type: string
        assignedToID:
          type: array
          example: "an array of user id's who is working on the task"
        createdByID:
          type: string
          example: "user ID of the person, who created the task"
          example: "an array of user id's who is working on the task"
        position:
          type: number
          example: "position for the task, a lower number = higher on the list"

    userModel:
      type: object
      properties:
        username:
          type: string
          example: "MattyxD"
        email:
          type: string
          example: "email of the person creating the account"
        fName:
          type: string
          example: "person's first name"
        lName:
          type: string
          example: "person's last name"
        password:
          type: string
          example: "password for the account"
        color:
          type: string
          example: "a hex value which is autogenerated when the user successfully creates their account"


paths:
  /addNewOrganization:
    post:
      tags:
        - organizations
      summary: Add a new organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationModel"
      responses:
        '200':
          description: Organization created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  org:
                    $ref: "#/components/schemas/OrganizationModel"
        '500':
          description: Something went wrong with adding a new Organization
  /updateOrganization/{orgID}:
    post:
      tags:
        - organizations
      summary: Update organization details
      parameters:
        - in: path
          name: orgID
          required: true
          schema:
            type: string
          description: ID of the organization to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationModel"
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  organization:
                    $ref: "#/components/schemas/OrganizationModel"
        '404':
          description: Organization not found
        '400':
          description: Invalid organization ID
        '500':
          description: Failed to update the organization
  /getOrganizationsFromID:
    get:
      tags:
        - organizations
      summary: Get organizations associated with the user ID
      responses:
        '200':
          description: Organizations found
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrganizationModel"
        '500':
          description: Internal Server Error
  /getSpecificOrg/{orgID}:
    get:
      tags:
        - organizations
      summary: Get specific organization details
      parameters:
        - in: path
          name: orgID
          required: true
          schema:
            type: string
          description: ID of the organization to retrieve
      responses:
        '200':
          description: Available Organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  org:
                    $ref: "#/components/schemas/OrganizationModel"
        '500':
          description: Internal Server Error
  /check-user-invites:
    get:
      tags:
        - organizations
      summary: Check invitations for the logged-in user
      responses:
        '200':
          description: Invitations found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    orgName:
                      type: string
                    owner:
                      $ref: "#/components/schemas/userModel"
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /accept-org-inv/{orgID}:
    get:
      tags:
        - organizations
      summary: Accept organization invitation
      parameters:
        - in: path
          name: orgID
          required: true
          schema:
            type: string
          description: ID of the organization invitation to accept
      responses:
        '200':
          description: Invitation accepted
        '401':
          description: Unauthorized
        '404':
          description: Organization not found
        '400':
          description: Invite not found in the organization
        '500':
          description: Internal Server Error
  /decline-org-inv/{orgID}:
    get:
      tags:
        - organizations
      summary: Decline organization invitation
      parameters:
        - in: path
          name: orgID
          required: true
          schema:
            type: string
          description: ID of the organization invitation to decline
      responses:
        '200':
          description: Invitation declined
        '401':
          description: Unauthorized
        '404':
          description: Organization not found
        '400':
          description: Invite not found in the organization
        '500':
          description: Internal Server Error
  /delete-org/{orgID}:
    get:
      tags:
        - organizations
      summary: Delete organization
      parameters:
        - in: path
          name: orgID
          required: true
          schema:
            type: string
          description: ID of the organization to delete
      responses:
        '200':
          description: Organization deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/OrganizationModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization not found
        '500':
          description: Internal Server Error

  /addNewProject:
    post:
      tags:
        - Projects
      summary: Add a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  type: string
                projectMembers:
                  type: array
                  items:
                    type: object
                orgID:
                  type: string
      responses:
        '200':
          description: Project added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  projectID:
                    type: string
        '500':
          description: Something went wrong with adding a new project
  /getSpecificProject/{projectID}:
    get:
      tags:
        - Projects
      summary: Get specific project details
      parameters:
        - in: path
          name: projectID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  Title:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        projectName:
                          type: string
                        projectStateIDs:
                          type: array
                          items:
                            type: string
                        orgID:
                          type: string
                        projectStates:
                          type: array
                          items:
                            type: object
                            properties:
                              stateName:
                                type: string
                              stateID:
                                type: string
                              position:
                                type: integer
                        membersInfo:
                          type: array
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                              fName:
                                type: string
                              lName:
                                type: string
                              color:
                                type: string
        '500':
          description: Server error
  /getProjects/{orgID}:
    get:
      tags:
        - Projects
      summary: Get Projects associated with the organization ID
      parameters:
        - in: path
          name: orgID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Projects found
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: array
                    items:
                      type: object
                      properties:
                        projectName:
                          type: string
                        projectStateIDs:
                          type: array
                          items:
                            type: string
                        orgID:
                          type: string
                        membersInfo:
                          type: array
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                              fName:
                                type: string
                              lName:
                                type: string
                              color:
                                type: string
        '500':
          description: Internal Server Error
  /updateSingleProjectBoard:
    post:
      tags:
        - Projects
      summary: Update single project board
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskArray:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: Board successfully updated
        '500':
          description: Server error
  /getSingleProject:
    post:
      tags:
        - Projects
      summary: Get single project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectID:
                  type: string
      responses:
        '200':
          description: Data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  Title:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        projectName:
                          type: string
                        projectStateIDs:
                          type: array
                          items:
                            type: string
                        orgID:
                          type: string
                        projectStates:
                          type: array
                          items:
                            type: object
                            properties:
                              stateName:
                                type: string
                              stateID:
                                type: string
                              position:
                                type: integer
                        membersInfo:
                          type: array
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                              fName:
                                type: string
                              lName:
                                type: string
                              color:
                                type: string
        '500':
          description: Server error
  /updateProjectData:
    post:
      tags:
        - Projects
      summary: Update project data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newProjectName:
                  type: string
                projectID:
                  type: string
                newBoards:
                  type: array
                  items:
                    type: object
                newMembers:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: Board successfully updated
        '500':
          description: Server error
  /deleteProject:
    delete:
      tags:
        - Projects
      summary: Delete project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectID:
                  type: string
      responses:
        '200':
          description: Deleted project
        '500':
          description: Internal server error
  /updateStatesPos:
    post:
      tags:
        - Projects
      summary: Update states position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  ID:
                    type: string
                  position:
                    type: integer
      responses:
        '200':
          description: States updated successfully
        '500':
          description: Internal server error

  /updateSingleTask:
    post:
      tags:
        - tasks
      summary: Update single task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskTitle:
                  type: string
                taskDescription:
                  type: string
                assignedToID:
                  type: string
                labelColor:
                  type: string
                hoursExpected:
                  type: number
                hoursSpent:
                  type: number
      responses:
        '200':
          description: Task updated Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
        '500':
          description: something went wrong with updating task information
  /deleteSingleTask:
    delete:
      tags:
        - tasks
      summary: Delete single task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskID:
                  type: string
      responses:
        '200':
          description: Task deleted Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
        '500':
          description: something went wrong when deleting task
  /updateTaskPosition:
    post:
      tags:
        - tasks
      summary: Update task position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  position:
                    type: integer
      responses:
        '200':
          description: Task position successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
        '500':
          description: something went wrong when updating task position
  /updateTaskState:
    post:
      tags:
        - tasks
      summary: Update task state
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskID:
                  type: string
                newStateID:
                  type: string
      responses:
        '200':
          description: Task state successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
        '500':
          description: something went wrong when updating task state

  /register:
    post:
      tags:
        - user
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                fName:
                  type: string
                lName:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User registered successfully
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

  /update-user:
    post:
      tags:
        - user
      summary: Update user information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fName:
                  type: string
                lName:
                  type: string
                color:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal Server Error

  /delete:
    delete:
      tags:
        - user
      summary: Delete user
      responses:
        '200':
          description: User deleted successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /find-user:
    get:
      tags:
        - user
      summary: Find user by ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  fName:
                    type: string
                  lName:
                    type: string
                  color:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal Server Error

  /logout:
    get:
      tags:
        - user
      summary: Logout user
      responses:
        '200':
          description: Logged out successfully

